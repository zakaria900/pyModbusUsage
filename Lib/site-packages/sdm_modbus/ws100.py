from sdm_modbus import meter


class WS100(meter.Meter):
    pass

class WS100_19XX(WS100):

    def __init__(self, *args, **kwargs):
        self.model = "WS100_19XX"
        self.baud = 9600

        super().__init__(*args, **kwargs)
        self.registers = {
    # ======================
    # Mesures instantanées
    # ======================
    "voltage": (0x0100, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Voltage", "V", 1, 1),
    "current": (0x0102, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Current", "A", 1, 1),
    "active_power": (0x0104, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Active Power", "W", 1, 1),
    "apparent_power": (0x0106, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Apparent Power", "VA", 1, 1),
    "reactive_power": (0x0108, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Reactive Power", "var", 1, 1),
    "frequency": (0x010A, 1, meter.registerType.INPUT, meter.registerDataType.INT16, float, "Frequency", "Hz", 0.01, 1),
    "power_factor": (0x010B, 1, meter.registerType.INPUT, meter.registerDataType.INT16, float, "Power Factor", "", 0.001, 1),

    # ======================
    # Énergies actives
    # ======================
    "total_forward_active_energy": (0x010E, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Total Forward Active Energy", "kWh", 1, 1),
    "t1_forward_active_energy": (0x0110, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T1 Forward Active Energy", "kWh", 1, 1),
    "t2_forward_active_energy": (0x0112, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T2 Forward Active Energy", "kWh", 1, 1),
    "t3_forward_active_energy": (0x0114, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T3 Forward Active Energy", "kWh", 1, 1),
    "t4_forward_active_energy": (0x0116, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T4 Forward Active Energy", "kWh", 1, 1),
    "total_reverse_active_energy": (0x0118, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Total Reverse Active Energy", "kWh", 1, 1),
    "t1_reverse_active_energy": (0x011A, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T1 Reverse Active Energy", "kWh", 1, 1),
    "t2_reverse_active_energy": (0x011C, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T2 Reverse Active Energy", "kWh", 1, 1),
    "t3_reverse_active_energy": (0x011E, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T3 Reverse Active Energy", "kWh", 1, 1),
    "t4_reverse_active_energy": (0x0120, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "T4 Reverse Active Energy", "kWh", 1, 1),
    "total_active_energy": (0x0122, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Total Active Energy", "kWh", 1, 1),

    # # ======================
    # # Énergies réactives
    # # ======================
    "total_forward_reactive_energy": (0x012C, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Total Forward Reactive Energy", "kvarh", 1, 1),
    "total_reverse_reactive_energy": (0x0136, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Total Reverse Reactive Energy", "kvarh", 1, 1),
    "total_reactive_energy": (0x0140, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Total Reactive Energy", "kvarh", 1, 1),

    # # ======================
    # # Puissance appelée
    # # ======================
    "forward_active_demand": (0x0176, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Forward Active Demand", "W", 2, 1),
    "reverse_active_demand": (0x017A, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Reverse Active Demand", "W", 2, 1),
    "forward_reactive_demand": (0x0180, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Forward Reactive Demand", "var", 2, 1),
    "reverse_reactive_demand": (0x0184, 2, meter.registerType.INPUT, meter.registerDataType.INT32, int, "Reverse Reactive Demand", "var", 2, 1),
}
